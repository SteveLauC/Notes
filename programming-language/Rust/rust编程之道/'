1. 生命周期标记的例子

    ```rust
    fn longest<'a, 'b>(x: &'a str, y: &'b str) -> &'a str 
    where 'b: 'a
    {
    if x.len() > y.len() {
            x
                
                } else {
                        y
                            
                }
                
    }
    ```

    当我们给`x`和`y`分别标记不同的生命周期标记，并且给返回值标记了`'a`的生命周期，
    如果返回值是根据`x`得来的，那自然是没有问题的，返回值一定不是悬垂指针。但假
    返回值是由`y`得来的，就不一定了，所以我们为了确保返回值一直合法，指定了`'b: 'a`
    这样当返回值是由`y`得来的话，y活的时间更长，返回值也一直是合法的了。

    ```rust
    fn main() {
        let str1 = String::new();
        {
            let str2 = String::new();
            logest(&str1, &str2);
        }
    }```
