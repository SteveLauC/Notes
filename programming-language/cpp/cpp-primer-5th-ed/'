#### 2.3

##### 2.3.1 引用

1. 引用必须初始化，且在绑定后不可以变更绑定对象
   
   ```cpp
   #include <cstdint>
   #include <iostream>
   
   int main() {
     int32_t i = 0;
   
     int32_t &ref;   // ■ Declaration of reference variable 'ref' requires an initializer
     return 0;
   }
   ```

2. 由于引用不是一个对象，只是别名，所以不可以定义引用的引用

   ```cpp
   #include <cstdint>
   #include <iostream>
   
   int main() {
     int32_t i = 0;
     int32_t &ref = i;
     int32_t &ref_to_ref = ref; // another reference to i
     return 0;
   }
   ``` 

3. 引用的类型必须和被引用的类型保持一致
   
   ```cpp
   const int32_t i = 0;
   int32_t &ref = i;
   ```

   ```shell
   main.cpp:6:16: error: binding reference of type ‘int32_t&’ {aka ‘int&’} to ‘const int32_t’ {aka ‘const int’} discards qualifiers
   ```

   但是有2个例外:

   1. 在初始化常量引用时，只要可以初始化成功就可以 	

      ```cpp
      int32_t i = 42;
      double f = 3.14;
      const int32_t &r1 = i; // ok
      const int32_t &r2 = 5; // ok
      const int32_t &r3 = r1 * 2; // ok
      const int32_t &r4 = f; // ok
      ```

      最后一个例子是编译器给生成了一个临时的`int32_t`的变量，然后绑定上去了
